{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAASC,SAASC,iBAAiB,SACnCC,EAAYF,SAASG,cAAc,UACzC,IAAIC,EACAC,EACAC,EACJ,MAAMC,EAAe,CAACH,EAAYC,EAAOC,GAiBzCP,EAAOS,SAAQ,CAACC,EAAOC,KACrBD,EAAME,iBAAiB,SAAS,KAC9BJ,EAAaG,GAAKE,WAAWH,EAAMI,MAAM,GACzC,IAGJX,EAAUS,iBAAiB,SAAUG,IAGnC,IAFCV,EAAYC,EAAOC,GAAiBC,EACrCO,EAAMC,iBACFR,EAAaS,MAAKC,QAA+BC,IAAhBD,IACrCpB,EAAAsB,OAAOC,QAAQ,oCACR,CACLlB,EAAUmB,aAAa,WAAY,IACnC,IAAK,IAAIX,EAAI,EAAGA,GAAIJ,EAAeI,IACjCY,YAAW,KA7BjB,IAAuBC,EAAUC,GAAVD,EA8BDb,EA9BWc,EA8BRnB,EA7BDoB,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,CACrBL,SAAUA,EACVM,MAAOL,IAGFG,QAAQG,OAAO,CACpBP,SAAUA,EACVM,MAAOL,KAqBJO,MAAK,EAACR,SAAEA,EAAUM,MAAAG,MACjBA,EAAQ5B,EAAa4B,GAAOtB,EAAE,GAC9Bb,EAAAsB,OAAOc,QAAQ,uBAAqBV,QAAiBS,MAAU,IAEhEE,OAAM,EAACX,SAAEA,EAAUM,MAAAM,MAClBA,EAAQ/B,EAAa+B,GAAOzB,EAAE,GAC9Bb,EAAAsB,OAAOC,QAAQ,sBAAoBG,QAAeY,MAAU,IAE1DzB,IAAMJ,GAAeJ,EAAUkC,gBAAgB,WAAW,GAC7DhC,EAAaC,GAAOK,EAAE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst inputs = document.querySelectorAll('input');\nconst createBtn = document.querySelector('button');\nlet firstDelay;\nlet delay;\nlet promiseAmount;\nconst chosenValues = [firstDelay, delay, promiseAmount];\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({\n      position: position,\n      delay: delay\n    });\n  } else {\n    return Promise.reject({\n      position: position,\n      delay: delay\n    });\n  }\n}\n\ninputs.forEach((input, i) => {\n  input.addEventListener('input', () => {\n    chosenValues[i] = parseFloat(input.value);\n  })\n})\n\ncreateBtn.addEventListener('click', (event) => {\n  [firstDelay, delay, promiseAmount] = chosenValues;\n  event.preventDefault();\n  if (chosenValues.some(chosenValue => chosenValue === undefined)) {\n  Notify.failure(\"Please fill in all 3 fields!\");\n  } else {\n    createBtn.setAttribute('disabled', '');\n    for (let i = 1; i<= promiseAmount; i++) {\n      setTimeout(() => {\n        createPromise(i, delay)\n        .then(({ position, delay }) => {\n          delay = firstDelay + delay*(i-1);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        })\n        .catch(({ position, delay }) => {\n          delay = firstDelay + delay*(i-1);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        })\n        if (i === promiseAmount) createBtn.removeAttribute('disabled');\n      }, firstDelay + delay*(i-1))\n    }\n  }\n})"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputs","document","querySelectorAll","$47d4ff9957288465$var$createBtn","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$promiseAmount","$47d4ff9957288465$var$chosenValues","forEach","input","i","addEventListener","parseFloat","value","event","preventDefault","some","chosenValue","undefined","Notify","failure","setAttribute","setTimeout","position","delay1","Math","random","Promise","resolve","delay","reject","then","delay2","success","catch","delay3","removeAttribute"],"version":3,"file":"03-promises.a90373d2.js.map"}